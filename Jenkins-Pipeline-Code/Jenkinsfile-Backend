pipeline {
    agent any
    
    tools{
        jdk 'jdk17'
        nodejs 'nodejs16'  
    }

    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Velocity9919/wanderlust.git'
            }
        }
        
        stage('backend application') {
            steps {
                dir('backend') {
                    sh "npm install"
                }
            }
        }

        stage('Trivy File Scan') {
            steps {
                dir('backend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                dir('backend') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=wanderlust-backend \
                        -Dsonar.projectKey=wanderlust-backend '''
                    }
                }
            }
        }

        stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }

        stage('OWASP Dependency-Check Scan') {
            steps {
                dir('backend') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }

        stage("Docker backend Build & push") {
            steps {
                script {
                    dir('backend') {
                        withDockerRegistry(credentialsId: 'dockerhub', toolName: 'docker'){
                        
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t wanderlust-backend .'
                            sh "docker tag wanderlust-backend nareshbabu1991/wanderlust-backend:latest "
                            sh "docker push nareshbabu1991/wanderlust-backend:latest "
                        }
                    }
                }
            }
        }

        stage('Deploy to container'){
            steps{
                sh 'docker run -d --name three-tier-backend -p 5000:5000 nareshbabu1991/wanderlust-backend:latest'
            }
        }
        
        stage('trivy'){
            steps{
                script{
                    sh 'trivy image --severity HIGH,CRITICAL nareshbabu1991/wanderlust-backend:latest'
                }
            }
        }
        
        stage("Code Deploy: Docker-compose"){
            steps{       
                sh "docker-compose down && docker-compose up -d"
            }
        }
    }
}